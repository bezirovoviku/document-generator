{"version":3,"sources":["file-input.js","tabs.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbfile":"app.js","sourcesContent":["$(document).on('change', '.btn-file :file', function() {\n\tvar input = $(this);\n\tvar numFiles = input.get(0).files ? input.get(0).files.length : 1;\n\tvar label = input.val().replace(/\\\\/g, '/').replace(/.*\\//, '');\n\n\tinput.trigger('fileselect', [numFiles, label]);\n});\n\n$(document).ready( function() {\n\t$('.btn-file :file').on('fileselect', function(event, numFiles, label) {\n\t\tvar input = $(this).parents('.input-group').find(':text');\n\t\tinput.val(label);\n\t});\n});","function showRequestDataType(dataType, requestType, counter)\n{\n\tvar request = $('#' + requestType + '-' + dataType + '-' + counter);\n\t\trequest.show();\n\treturn request;\n}\nfunction hideOtherRequestDataTypes(showedRequest)\n{\n\tshowedRequest.siblings('pre').hide();\n}\n\nfunction disableOtherButtons(enabledButton, otherButtons)\n{\n\totherButtons.removeClass('active');\n}\n\t\t\t/* Manages data types and requests for each example */\nfunction RequestDataTypesHandler()\n{\t\n\t/* Array of valid data types */\n\tvar dataTypes = ['json', 'csv', 'xml'];\n\n\t/* Array of valid request types */\n\tvar requestTypes = ['data', 'full'];\n\n\t/* Array used to hold which of valid data type and request type is used for an example(counter) */\n\tvar currentRequestDataTypesByExample = [];\n\n\t/* Initialization of dataTypes for each example. Default dataType is json */\n\t(function () {\n\t\t$('div.example').each(function () {\n\t\t\tvar counter = parseInt($(this).data('counter'), 10);\n\t\t\tif (counter >= 0) {\n\t\t\t\tcurrentRequestDataTypesByExample[counter] = {requestType: 'full', dataType: 'json'};\n\t\t\t\thideOtherRequestDataTypes(showRequestDataType('json', 'full', counter));\n\t\t\t} else {\n\t\t\t\tthrow \"Invalid Example\";\n\t\t\t}\n\t\t});\t\t\n\t}());\n\n\t/* Checks if dataType id valid */\n\tvar validDataType = function (dataType) {\n\t\treturn $.inArray(dataType, dataTypes) !== -1;\n\t};\n\n\t/* Checks if requestType id valid */\n\tvar validRequestType = function (requestType) {\n\t\treturn $.inArray(requestType, requestTypes) !== -1;\n\t};\n\n\t/* Checks if counter is valid */\n\tvar validCounter = function (counter) {\n\t\treturn counter >= 0 && counter < currentRequestDataTypesByExample.length;\n\t};\n\n\t/* Returns object with current data type and request type used for example(counter). */\n\tthis.getCurrentRequestDataTypeByExample = function (counter) {\n\t\tvar intCounter = parseInt(counter, 10);\n\t\tif (validCounter(intCounter)) {\n\t\t\treturn currentRequestDataTypesByExample[intCounter];\n\t\t}\n\t\tthrow \"Invalid Example\";\n\t};\n\n\t/* Sets dataType used for example(counter). */\n\tthis.setCurrentDataTypeByExample = function (counter, dataType) {\n\t\tvar intCounter = parseInt(counter, 10);\n\t\tif (validDataType(dataType) && validCounter(intCounter)) {\n\t\t\tcurrentRequestDataTypesByExample[intCounter].dataType = dataType;\n\t\t} else {\n\t\t\tthrow \"Invalid Example Or DataType\";\n\t\t}\n\t};\n\n\t/* Sets dataType used for example(counter). */\n\tthis.setCurrentRequestTypeByExample = function (counter, requestType) {\n\t\tvar intCounter = parseInt(counter, 10);\n\t\tif (validRequestType(requestType) && validCounter(intCounter)) {\n\t\t\tcurrentRequestDataTypesByExample[intCounter].requestType = requestType;\n\t\t} else {\n\t\t\tthrow \"Invalid Example Or RequestType\";\n\t\t}\n\t};\n}\nvar requestDataTypesHandler = new RequestDataTypesHandler();\n$('div.example button.data-type').click(function () {\n\tvar $this = $(this);\n\tvar counter = $this.parent().data('counter');\n\tvar dataType = $this.data('datatype');\n\tvar requestType = requestDataTypesHandler.getCurrentRequestDataTypeByExample(counter).requestType;\n\trequestDataTypesHandler.setCurrentDataTypeByExample(counter, dataType);\n\thideOtherRequestDataTypes(showRequestDataType(dataType, requestType, counter));\n\t$this.addClass('active');\n\tdisableOtherButtons($this, $this.siblings('button.data-type'));\n});\n$('div.example button.request-type').click(function () {\n\tvar $this = $(this);\n\tvar counter = $this.parent().data('counter');\n\tvar requestType = $this.data('requesttype');\n\tvar dataType = requestDataTypesHandler.getCurrentRequestDataTypeByExample(counter).dataType;\n\trequestDataTypesHandler.setCurrentRequestTypeByExample(counter, requestType);\n\thideOtherRequestDataTypes(showRequestDataType(dataType, requestType, counter));\n\t$this.addClass('active');\n\tdisableOtherButtons($this, $this.siblings('button.request-type'));\n});\n$('.nav-tabs a').click(function(e) {\n\te.preventDefault();\n\t$(this).tab('show');\n});"],"sourceRoot":"/source/"}