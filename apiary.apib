FORMAT: 1A

# docgen
API allows you to generate multiple docx documents using specified template and data

# Generation

For all following actions, API key specified in HTTP header is required.

## Template [/api/v1/template]

Templates are used for generation of multiple documents.

### Upload template [POST]

Uploads new template. Returns its ID and MD5 checksum. X-Upload-Content-Length contains file size and file contents should be sent as body.

+ Request
    
    + Headers
        
            X-Auth: API key
            X-Upload-Content-Length: 2000000

    + Body
        
            DOCX BINARY DATA WITH SPECIFIED LENGTH

+ Attributes
    + file (required, array) - POST file type

+ Request (application/x-www-form-urlencoded)

+ Response 200 (application/json)

        {
            "template_id": 10,
            "md5": "09f5f87a3bf63e32a8325b9202a5ed78"
        }
 
+ Response 401 (application/json)
        
        {
            "error": "API key is invalid."
        }

+ Response 500 (application/json)

        {
            "error_id": 1,
            "error": "File is too big."
        }

### Delete template [DELETE /api/v1/template/{template_id}]

Deletes template pernamently.

+ Request
    
    + Headers
    
            X-Auth: API key

+ Parameters
    + template_id (required, number) - template ID

+ Response 200 (application/json)
 
+ Response 401 (application/json)
        
        {
            "error": "API key is invalid."
        }

+ Response 404 (application/json)
        
        {
            "error": "Template ID is invalid."
        }



## Requests [/api/v1/request]

Requests for document generation. When you have your template ready, you need to provide data to the server.
Server will then generate all required documents. This may take some time, so you will need to either specify callback url, or ask server periodically if the request is finished.

### Create request [POST]

Creates new request. Returns its ID. Data are template data, where each item in array is new document.

+ Request
    
    + Headers
        
            X-Auth: API key

+ Attributes (object)
    + template_id (required, number) - ID of template to be used for generation
    + type (required, string) - Result type, pdf or docx
    + data (required, array) - Array of template data, each item as one generated document
    + response_url (optional, string) - URL that will be called, when request is completed

+ Request (application/json)
        
        {
            "template_id": 18,
            "type": "docx",
            "data": [
                {
                    "sender": "Kumos me, Apur Susu 12, Segal",
                    "receiver": "Kule Huhu, Alamar 26, Gugu, Mongo",
                    "items": [
                        {
                            "name": "Item 1",
                            "count": 1,
                            "price": 10
                        },
                        {
                            "name": "Item 2",
                            "count": 5,
                            "price": 20
                        }
                    ]
                }, {
                    "sender": "Kuu kaa",
                    "receiver": "Document",
                    "items": []
                }
            ]
        }

+ Response 200 (application/json)

        {
            "request_id": 10
        }
        
+ Response 401 (application/json)

        {
            "error": "API key is invalid.",
        }

+ Response 404 (application/json)

        {
            "error": "Invalid template id.",
        }
        
+ Response 417 (application/json)

        {
            "error": "No data specified.",
        }

## Informations [/api/v1/request/{request_id}]

Returns details about request. When request is completed, it will include link to download generated documents archive.

+ Parameters
    + request_id (number, required) - ID of request

### Request details [GET]

+ Request
    
    + Headers
        
            X-Auth: API key

+ Response 200 (application/json)

    + Body
    
            {
                "id": 10,
                "template_id": 128,
                "completed": true,
                "download_url": "http://..../request-10.zip"
            }

+ Response 401 (application/json)

        {
            "error": "API key is invalid.",
        }

+ Response 404 (application/json)

        {
            "error": "Invalid request id.",
        }
